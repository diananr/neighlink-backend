// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Neighlink.Repository.Context;

namespace Neighlink.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Neighlink.Entity.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount");

                    b.Property<int?>("BuildingId");

                    b.Property<int?>("CondominiumId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<int?>("PaymentCategoryId");

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("CondominiumId");

                    b.HasIndex("PaymentCategoryId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("Neighlink.Entity.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CondominiumId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Names")
                        .HasMaxLength(50);

                    b.Property<int>("NumberOfHomes")
                        .HasColumnName("NumberOfHomes")
                        .HasMaxLength(4);

                    b.Property<bool>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("CondominiumId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("Neighlink.Entity.Condominium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Name");

                    b.Property<string>("PhotoUrl");

                    b.Property<int?>("PlanId");

                    b.Property<string>("SecretCode");

                    b.Property<bool>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("Condominiums");
                });

            modelBuilder.Entity("Neighlink.Entity.Entity.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CondominiumId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("EndDate");

                    b.Property<DateTimeOffset>("StarDate");

                    b.Property<bool>("Status");

                    b.Property<string>("Title");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("CondominiumId");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("Neighlink.Entity.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CondominiumId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Description");

                    b.Property<bool>("Status");

                    b.Property<string>("Title");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("CondominiumId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Neighlink.Entity.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Name");

                    b.Property<bool>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Neighlink.Entity.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("BillId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<bool>("HasPaid");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("PhotoUrl");

                    b.Property<bool>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Neighlink.Entity.PaymentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CondominiumId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Descriptions")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Names")
                        .HasMaxLength(20);

                    b.Property<bool>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("CondominiumId");

                    b.ToTable("PaymentCategories");
                });

            modelBuilder.Entity("Neighlink.Entity.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Description");

                    b.Property<int>("NumberOfHomes");

                    b.Property<bool>("Status");

                    b.Property<int>("Type");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("Neighlink.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuildingId");

                    b.Property<int?>("CondominiumId");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<string>("Email");

                    b.Property<int>("Gender");

                    b.Property<int>("HouseNumber");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PhotoUrl");

                    b.Property<int>("Role");

                    b.Property<byte[]>("Salt");

                    b.Property<byte[]>("SaltedAndHashedPassword");

                    b.Property<string>("SecurityToken");

                    b.Property<bool>("Status");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("CondominiumId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Neighlink.Entity.Bill", b =>
                {
                    b.HasOne("Neighlink.Entity.Building")
                        .WithMany("Bills")
                        .HasForeignKey("BuildingId");

                    b.HasOne("Neighlink.Entity.Condominium")
                        .WithMany("Bills")
                        .HasForeignKey("CondominiumId");

                    b.HasOne("Neighlink.Entity.PaymentCategory")
                        .WithMany("Bills")
                        .HasForeignKey("PaymentCategoryId");
                });

            modelBuilder.Entity("Neighlink.Entity.Building", b =>
                {
                    b.HasOne("Neighlink.Entity.Condominium")
                        .WithMany("Buildings")
                        .HasForeignKey("CondominiumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Neighlink.Entity.Condominium", b =>
                {
                    b.HasOne("Neighlink.Entity.Plan")
                        .WithMany("Condominiums")
                        .HasForeignKey("PlanId");
                });

            modelBuilder.Entity("Neighlink.Entity.Entity.Poll", b =>
                {
                    b.HasOne("Neighlink.Entity.Condominium")
                        .WithMany("Polls")
                        .HasForeignKey("CondominiumId");
                });

            modelBuilder.Entity("Neighlink.Entity.News", b =>
                {
                    b.HasOne("Neighlink.Entity.Condominium")
                        .WithMany("New")
                        .HasForeignKey("CondominiumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Neighlink.Entity.Payment", b =>
                {
                    b.HasOne("Neighlink.Entity.Bill")
                        .WithMany("Payment")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Neighlink.Entity.User")
                        .WithMany("Payment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Neighlink.Entity.PaymentCategory", b =>
                {
                    b.HasOne("Neighlink.Entity.Condominium")
                        .WithMany("PaymentCategories")
                        .HasForeignKey("CondominiumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Neighlink.Entity.User", b =>
                {
                    b.HasOne("Neighlink.Entity.Building")
                        .WithMany("Users")
                        .HasForeignKey("BuildingId");

                    b.HasOne("Neighlink.Entity.Condominium")
                        .WithMany("Administrators")
                        .HasForeignKey("CondominiumId");
                });
#pragma warning restore 612, 618
        }
    }
}
